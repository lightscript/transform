import { isa } from "../types"
import { addImplicitReturns } from "../helpers/functions"
import { getFunctionScopeParent } from "../helpers/blocks"

export enterFunction(path): void ->
  if path.node~isa("FunctionDeclaration"):
    // Possible Babel bug: Babel considers function declarations to be
    // block scoped per:
    // https://github.com/babel/babel/blob/eac4c5bc17133c2857f2c94c1a6a8643e3b547a7/packages/babel-types/src/validators/isBlockScoped.js
    //
    // But they are actually function scoped.
    scopeParent = path~getFunctionScopeParent()
    scopeParent.scope.registerDeclaration(path)

export exitFunction(path): void ->
  addImplicitReturns(path)
